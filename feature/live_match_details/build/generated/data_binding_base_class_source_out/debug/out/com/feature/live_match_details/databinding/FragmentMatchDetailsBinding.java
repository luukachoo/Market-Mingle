// Generated by view binder compiler. Do not edit!
package com.feature.live_match_details.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.feature.live_match_details.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMatchDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonWatchOnTwitch;

  @NonNull
  public final MaterialButton buttonWatchOnYT;

  @NonNull
  public final FloatingActionButton floatingActionButton;

  @NonNull
  public final AppCompatImageView ivTeamOneImage;

  @NonNull
  public final AppCompatImageView ivTeamSecondImage;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvTeamPlayers;

  @NonNull
  public final AppCompatTextView tvMinus;

  @NonNull
  public final AppCompatTextView tvSecondTeamScore;

  @NonNull
  public final AppCompatTextView tvTeamOneScore;

  @NonNull
  public final AppCompatTextView tvTitle;

  private FragmentMatchDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonWatchOnTwitch, @NonNull MaterialButton buttonWatchOnYT,
      @NonNull FloatingActionButton floatingActionButton,
      @NonNull AppCompatImageView ivTeamOneImage, @NonNull AppCompatImageView ivTeamSecondImage,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView rvTeamPlayers,
      @NonNull AppCompatTextView tvMinus, @NonNull AppCompatTextView tvSecondTeamScore,
      @NonNull AppCompatTextView tvTeamOneScore, @NonNull AppCompatTextView tvTitle) {
    this.rootView = rootView;
    this.buttonWatchOnTwitch = buttonWatchOnTwitch;
    this.buttonWatchOnYT = buttonWatchOnYT;
    this.floatingActionButton = floatingActionButton;
    this.ivTeamOneImage = ivTeamOneImage;
    this.ivTeamSecondImage = ivTeamSecondImage;
    this.progressBar = progressBar;
    this.rvTeamPlayers = rvTeamPlayers;
    this.tvMinus = tvMinus;
    this.tvSecondTeamScore = tvSecondTeamScore;
    this.tvTeamOneScore = tvTeamOneScore;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMatchDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMatchDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_match_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMatchDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonWatchOnTwitch;
      MaterialButton buttonWatchOnTwitch = ViewBindings.findChildViewById(rootView, id);
      if (buttonWatchOnTwitch == null) {
        break missingId;
      }

      id = R.id.buttonWatchOnYT;
      MaterialButton buttonWatchOnYT = ViewBindings.findChildViewById(rootView, id);
      if (buttonWatchOnYT == null) {
        break missingId;
      }

      id = R.id.floatingActionButton;
      FloatingActionButton floatingActionButton = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButton == null) {
        break missingId;
      }

      id = R.id.ivTeamOneImage;
      AppCompatImageView ivTeamOneImage = ViewBindings.findChildViewById(rootView, id);
      if (ivTeamOneImage == null) {
        break missingId;
      }

      id = R.id.ivTeamSecondImage;
      AppCompatImageView ivTeamSecondImage = ViewBindings.findChildViewById(rootView, id);
      if (ivTeamSecondImage == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rvTeamPlayers;
      RecyclerView rvTeamPlayers = ViewBindings.findChildViewById(rootView, id);
      if (rvTeamPlayers == null) {
        break missingId;
      }

      id = R.id.tvMinus;
      AppCompatTextView tvMinus = ViewBindings.findChildViewById(rootView, id);
      if (tvMinus == null) {
        break missingId;
      }

      id = R.id.tvSecondTeamScore;
      AppCompatTextView tvSecondTeamScore = ViewBindings.findChildViewById(rootView, id);
      if (tvSecondTeamScore == null) {
        break missingId;
      }

      id = R.id.tvTeamOneScore;
      AppCompatTextView tvTeamOneScore = ViewBindings.findChildViewById(rootView, id);
      if (tvTeamOneScore == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      AppCompatTextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentMatchDetailsBinding((ConstraintLayout) rootView, buttonWatchOnTwitch,
          buttonWatchOnYT, floatingActionButton, ivTeamOneImage, ivTeamSecondImage, progressBar,
          rvTeamPlayers, tvMinus, tvSecondTeamScore, tvTeamOneScore, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
