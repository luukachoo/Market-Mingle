// Generated by view binder compiler. Do not edit!
package com.feature.past_matches.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;

import com.feature.past_matches.R;
import com.google.android.material.card.MaterialCardView;

import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPastMatchBinding implements ViewBinding {
    @NonNull
    public final AppCompatImageView ivTeamOneLogo;
    @NonNull
    public final AppCompatImageView ivTeamTwoLogo;
    @NonNull
    public final AppCompatTextView tvDate;
    @NonNull
    public final AppCompatTextView tvMinus;
    @NonNull
    public final AppCompatTextView tvName;
    @NonNull
    public final AppCompatTextView tvTeamOneName;
    @NonNull
    public final AppCompatTextView tvTeamOneScore;
    @NonNull
    public final AppCompatTextView tvTeamTwoName;
    @NonNull
    public final AppCompatTextView tvTeamTwoScore;
    @NonNull
    public final AppCompatTextView tvTime;
    @NonNull
    public final AppCompatTextView tvVideoGameTitle;
    @NonNull
    private final MaterialCardView rootView;

    private ItemPastMatchBinding(@NonNull MaterialCardView rootView,
                                 @NonNull AppCompatImageView ivTeamOneLogo, @NonNull AppCompatImageView ivTeamTwoLogo,
                                 @NonNull AppCompatTextView tvDate, @NonNull AppCompatTextView tvMinus,
                                 @NonNull AppCompatTextView tvName, @NonNull AppCompatTextView tvTeamOneName,
                                 @NonNull AppCompatTextView tvTeamOneScore, @NonNull AppCompatTextView tvTeamTwoName,
                                 @NonNull AppCompatTextView tvTeamTwoScore, @NonNull AppCompatTextView tvTime,
                                 @NonNull AppCompatTextView tvVideoGameTitle) {
        this.rootView = rootView;
        this.ivTeamOneLogo = ivTeamOneLogo;
        this.ivTeamTwoLogo = ivTeamTwoLogo;
        this.tvDate = tvDate;
        this.tvMinus = tvMinus;
        this.tvName = tvName;
        this.tvTeamOneName = tvTeamOneName;
        this.tvTeamOneScore = tvTeamOneScore;
        this.tvTeamTwoName = tvTeamTwoName;
        this.tvTeamTwoScore = tvTeamTwoScore;
        this.tvTime = tvTime;
        this.tvVideoGameTitle = tvVideoGameTitle;
    }

    @NonNull
    public static ItemPastMatchBinding inflate(@NonNull LayoutInflater inflater) {
        return inflate(inflater, null, false);
    }

    @NonNull
    public static ItemPastMatchBinding inflate(@NonNull LayoutInflater inflater,
                                               @Nullable ViewGroup parent, boolean attachToParent) {
        View root = inflater.inflate(R.layout.item_past_match, parent, false);
        if (attachToParent) {
            parent.addView(root);
        }
        return bind(root);
    }

    @NonNull
    public static ItemPastMatchBinding bind(@NonNull View rootView) {
        // The body of this method is generated in a way you would not otherwise write.
        // This is done to optimize the compiled bytecode for size and performance.
        int id;
        missingId:
        {
            id = R.id.ivTeamOneLogo;
            AppCompatImageView ivTeamOneLogo = ViewBindings.findChildViewById(rootView, id);
            if (ivTeamOneLogo == null) {
                break missingId;
            }

            id = R.id.ivTeamTwoLogo;
            AppCompatImageView ivTeamTwoLogo = ViewBindings.findChildViewById(rootView, id);
            if (ivTeamTwoLogo == null) {
                break missingId;
            }

            id = R.id.tvDate;
            AppCompatTextView tvDate = ViewBindings.findChildViewById(rootView, id);
            if (tvDate == null) {
                break missingId;
            }

            id = R.id.tvMinus;
            AppCompatTextView tvMinus = ViewBindings.findChildViewById(rootView, id);
            if (tvMinus == null) {
                break missingId;
            }

            id = R.id.tvName;
            AppCompatTextView tvName = ViewBindings.findChildViewById(rootView, id);
            if (tvName == null) {
                break missingId;
            }

            id = R.id.tvTeamOneName;
            AppCompatTextView tvTeamOneName = ViewBindings.findChildViewById(rootView, id);
            if (tvTeamOneName == null) {
                break missingId;
            }

            id = R.id.tvTeamOneScore;
            AppCompatTextView tvTeamOneScore = ViewBindings.findChildViewById(rootView, id);
            if (tvTeamOneScore == null) {
                break missingId;
            }

            id = R.id.tvTeamTwoName;
            AppCompatTextView tvTeamTwoName = ViewBindings.findChildViewById(rootView, id);
            if (tvTeamTwoName == null) {
                break missingId;
            }

            id = R.id.tvTeamTwoScore;
            AppCompatTextView tvTeamTwoScore = ViewBindings.findChildViewById(rootView, id);
            if (tvTeamTwoScore == null) {
                break missingId;
            }

            id = R.id.tvTime;
            AppCompatTextView tvTime = ViewBindings.findChildViewById(rootView, id);
            if (tvTime == null) {
                break missingId;
            }

            id = R.id.tvVideoGameTitle;
            AppCompatTextView tvVideoGameTitle = ViewBindings.findChildViewById(rootView, id);
            if (tvVideoGameTitle == null) {
                break missingId;
            }

            return new ItemPastMatchBinding((MaterialCardView) rootView, ivTeamOneLogo, ivTeamTwoLogo,
                    tvDate, tvMinus, tvName, tvTeamOneName, tvTeamOneScore, tvTeamTwoName, tvTeamTwoScore,
                    tvTime, tvVideoGameTitle);
        }
        String missingId = rootView.getResources().getResourceName(id);
        throw new NullPointerException("Missing required view with ID: ".concat(missingId));
    }

    @Override
    @NonNull
    public MaterialCardView getRoot() {
        return rootView;
    }
}
